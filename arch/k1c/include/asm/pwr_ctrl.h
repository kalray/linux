/*
 * This file is subject to the terms and conditions of the GNU General Public
 * License.  See the file "COPYING" in the main directory of this archive
 * for more details.
 *
 * Copyright (C) 2018 Kalray Inc.
 */

#ifndef MPPA_PWR_CTRL_COOLIDGE
#define MPPA_PWR_CTRL_COOLIDGE

#define MPPA_PWR_CTRL_PE_CONTROL_OFFSET 0x0
#define MPPA_PWR_CTRL_PE_CONTROL_ELEM_SIZE 0x40
#define MPPA_PWR_CTRL_PE_CONTROL_ARRAY_SIZE 0x10
#define MPPA_PWR_CTRL_PE_CONTROL(BASE, PE_CONTROL) \
	((void *) (MPPA_PWR_CTRL(BASE) \
	+ MPPA_PWR_CTRL_PE_CONTROL_OFFSET)) \
	+ (PE_CONTROL) * MPPA_PWR_CTRL_PE_CONTROL_ELEM_SIZE

/* MPPA_PWR_CTRL_PE_CONTROL_WRITE register definition */
#define MPPA_PWR_CTRL_PE_CONTROL_WRITE_OFFSET     0x0
#define MPPA_PWR_CTRL_PE_CONTROL_WRITE_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_PE_CONTROL_WRITE_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_PE_CONTROL_WRITE register bit fields defines */
#define MPPA_PWR_CTRL_PE_CONTROL_WRITE_WAKEUP_SHIFT          0
#define MPPA_PWR_CTRL_PE_CONTROL_WRITE_WAKEUP_MASK           0x0000000000000001ULL
#define MPPA_PWR_CTRL_PE_CONTROL_WRITE_RESET_ON_WAKEUP_SHIFT 1
#define MPPA_PWR_CTRL_PE_CONTROL_WRITE_RESET_ON_WAKEUP_MASK  0x0000000000000002ULL
#define MPPA_PWR_CTRL_PE_CONTROL_WRITE_WD_ACK_SHIFT          2
#define MPPA_PWR_CTRL_PE_CONTROL_WRITE_WD_ACK_MASK           0x0000000000000004ULL
/* MPPA_PWR_CTRL_PE_CONTROL_WRITE bit fields values */
/* MPPA_PWR_CTRL_PE_CONTROL_WRITE register accessor */
#define MPPA_PWR_CTRL_PE_CONTROL_WRITE(BASE, PE_CONTROL) \
	((void *) (MPPA_PWR_CTRL_PE_CONTROL((BASE), (PE_CONTROL)) \
	+ MPPA_PWR_CTRL_PE_CONTROL_WRITE_OFFSET))

/* MPPA_PWR_CTRL_PE_CONTROL_SET register definition */
#define MPPA_PWR_CTRL_PE_CONTROL_SET_OFFSET     0x10
#define MPPA_PWR_CTRL_PE_CONTROL_SET_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_PE_CONTROL_SET_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_PE_CONTROL_SET register bit fields defines */
#define MPPA_PWR_CTRL_PE_CONTROL_SET_WAKEUP_SHIFT          0
#define MPPA_PWR_CTRL_PE_CONTROL_SET_WAKEUP_MASK           0x0000000000000001ULL
#define MPPA_PWR_CTRL_PE_CONTROL_SET_RESET_ON_WAKEUP_SHIFT 1
#define MPPA_PWR_CTRL_PE_CONTROL_SET_RESET_ON_WAKEUP_MASK  0x0000000000000002ULL
#define MPPA_PWR_CTRL_PE_CONTROL_SET_WD_ACK_SHIFT          2
#define MPPA_PWR_CTRL_PE_CONTROL_SET_WD_ACK_MASK           0x0000000000000004ULL
/* MPPA_PWR_CTRL_PE_CONTROL_SET bit fields values */
/* MPPA_PWR_CTRL_PE_CONTROL_SET register accessor */
#define MPPA_PWR_CTRL_PE_CONTROL_SET(BASE, PE_CONTROL) \
	((void *) (MPPA_PWR_CTRL_PE_CONTROL((BASE), (PE_CONTROL)) \
	+ MPPA_PWR_CTRL_PE_CONTROL_SET_OFFSET))

/* MPPA_PWR_CTRL_PE_CONTROL_CLEAR register definition */
#define MPPA_PWR_CTRL_PE_CONTROL_CLEAR_OFFSET     0x20
#define MPPA_PWR_CTRL_PE_CONTROL_CLEAR_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_PE_CONTROL_CLEAR_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_PE_CONTROL_CLEAR register bit fields defines */
#define MPPA_PWR_CTRL_PE_CONTROL_CLEAR_WAKEUP_SHIFT          0
#define MPPA_PWR_CTRL_PE_CONTROL_CLEAR_WAKEUP_MASK           0x0000000000000001ULL
#define MPPA_PWR_CTRL_PE_CONTROL_CLEAR_RESET_ON_WAKEUP_SHIFT 1
#define MPPA_PWR_CTRL_PE_CONTROL_CLEAR_RESET_ON_WAKEUP_MASK  0x0000000000000002ULL
#define MPPA_PWR_CTRL_PE_CONTROL_CLEAR_WD_ACK_SHIFT          2
#define MPPA_PWR_CTRL_PE_CONTROL_CLEAR_WD_ACK_MASK           0x0000000000000004ULL
/* MPPA_PWR_CTRL_PE_CONTROL_CLEAR bit fields values */
/* MPPA_PWR_CTRL_PE_CONTROL_CLEAR register accessor */
#define MPPA_PWR_CTRL_PE_CONTROL_CLEAR(BASE, PE_CONTROL) \
	((void *) (MPPA_PWR_CTRL_PE_CONTROL((BASE), (PE_CONTROL)) \
	+ MPPA_PWR_CTRL_PE_CONTROL_CLEAR_OFFSET))

#define MPPA_PWR_CTRL_PE_STATUS_OFFSET 0x400
#define MPPA_PWR_CTRL_PE_STATUS_ELEM_SIZE 0x10
#define MPPA_PWR_CTRL_PE_STATUS_ARRAY_SIZE 0x10
#define MPPA_PWR_CTRL_PE_STATUS(BASE, PE_STATUS) \
	((void *) (MPPA_PWR_CTRL(BASE) \
	+ MPPA_PWR_CTRL_PE_STATUS_OFFSET)) \
	+ (PE_STATUS) * MPPA_PWR_CTRL_PE_STATUS_ELEM_SIZE

/* MPPA_PWR_CTRL_PE_STATUS_PROC_STS register definition */
#define MPPA_PWR_CTRL_PE_STATUS_PROC_STS_OFFSET     0x0
#define MPPA_PWR_CTRL_PE_STATUS_PROC_STS_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_PE_STATUS_PROC_STS_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_PE_STATUS_PROC_STS register bit fields defines */
#define MPPA_PWR_CTRL_PE_STATUS_PROC_STS_WD_SHIFT   11
#define MPPA_PWR_CTRL_PE_STATUS_PROC_STS_WD_MASK    0x0000000000000800ULL
#define MPPA_PWR_CTRL_PE_STATUS_PROC_STS_IDLE_SHIFT 12
#define MPPA_PWR_CTRL_PE_STATUS_PROC_STS_IDLE_MASK  0x0000000000001000ULL
#define MPPA_PWR_CTRL_PE_STATUS_PROC_STS_FSM_SHIFT  16
#define MPPA_PWR_CTRL_PE_STATUS_PROC_STS_FSM_MASK   0x0000000000010000ULL
/* MPPA_PWR_CTRL_PE_STATUS_PROC_STS bit fields values */
/* MPPA_PWR_CTRL_PE_STATUS_PROC_STS register accessor */
#define MPPA_PWR_CTRL_PE_STATUS_PROC_STS(BASE, PE_STATUS) \
	((void *) (MPPA_PWR_CTRL_PE_STATUS((BASE), (PE_STATUS)) \
	+ MPPA_PWR_CTRL_PE_STATUS_PROC_STS_OFFSET))

#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_OFFSET 0x1000
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_ELEM_SIZE 0xC0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_ARRAY_SIZE 0x1
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_OFFSET))

#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_OFFSET 0x0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_ELEM_SIZE 0x40
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_ARRAY_SIZE 0x1
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_OFFSET))

/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_WRITE register definition */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_WRITE_OFFSET     0x0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_WRITE_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_WRITE_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_WRITE register bit fields defines */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_WRITE_PE_SHIFT 0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_WRITE_PE_MASK  0x000000000000FFFFULL
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_WRITE_RM_SHIFT 16
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_WRITE_RM_MASK  0x0000000000010000ULL
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_WRITE bit fields values */
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_WRITE register accessor */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_WRITE(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_WRITE_OFFSET))

/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_SET register definition */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_SET_OFFSET     0x10
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_SET_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_SET_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_SET register bit fields defines */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_SET_PE_SHIFT 0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_SET_PE_MASK  0x000000000000FFFFULL
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_SET_RM_SHIFT 16
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_SET_RM_MASK  0x0000000000010000ULL
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_SET bit fields values */
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_SET register accessor */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_SET(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_SET_OFFSET))

/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_CLEAR register definition */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_CLEAR_OFFSET     0x20
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_CLEAR_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_CLEAR_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_CLEAR register bit fields defines */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_CLEAR_PE_SHIFT 0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_CLEAR_PE_MASK  0x000000000000FFFFULL
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_CLEAR_RM_SHIFT 16
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_CLEAR_RM_MASK  0x0000000000010000ULL
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_CLEAR bit fields values */
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_CLEAR register accessor */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_CLEAR(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WUP_CLEAR_OFFSET))

#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_OFFSET 0x40
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_ELEM_SIZE 0x40
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_ARRAY_SIZE 0x1
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_OFFSET))

/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_WRITE register definition */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_WRITE_OFFSET     0x0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_WRITE_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_WRITE_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_WRITE register bit fields defines */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_WRITE_PE_SHIFT 0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_WRITE_PE_MASK  0x000000000000FFFFULL
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_WRITE_RM_SHIFT 16
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_WRITE_RM_MASK  0x0000000000010000ULL
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_WRITE bit fields values */
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_WRITE register accessor */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_WRITE(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_WRITE_OFFSET))

/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_SET register definition */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_SET_OFFSET     0x10
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_SET_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_SET_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_SET register bit fields defines */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_SET_PE_SHIFT 0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_SET_PE_MASK  0x000000000000FFFFULL
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_SET_RM_SHIFT 16
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_SET_RM_MASK  0x0000000000010000ULL
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_SET bit fields values */
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_SET register accessor */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_SET(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_SET_OFFSET))

/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_CLEAR register definition */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_CLEAR_OFFSET     0x20
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_CLEAR_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_CLEAR_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_CLEAR register bit fields defines */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_CLEAR_PE_SHIFT 0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_CLEAR_PE_MASK  0x000000000000FFFFULL
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_CLEAR_RM_SHIFT 16
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_CLEAR_RM_MASK  0x0000000000010000ULL
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_CLEAR bit fields values */
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_CLEAR register accessor */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_CLEAR(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_RESET_ON_WAKEUP_CLEAR_OFFSET))

#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_OFFSET 0x80
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_ELEM_SIZE 0x40
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_ARRAY_SIZE 0x1
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_OFFSET))

/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_WRITE register definition */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_WRITE_OFFSET     0x0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_WRITE_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_WRITE_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_WRITE register bit fields defines */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_WRITE_PE_SHIFT 0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_WRITE_PE_MASK  0x000000000000FFFFULL
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_WRITE_RM_SHIFT 16
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_WRITE_RM_MASK  0x0000000000010000ULL
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_WRITE bit fields values */
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_WRITE register accessor */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_WRITE(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_WRITE_OFFSET))

/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_SET register definition */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_SET_OFFSET     0x10
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_SET_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_SET_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_SET register bit fields defines */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_SET_PE_SHIFT 0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_SET_PE_MASK  0x000000000000FFFFULL
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_SET_RM_SHIFT 16
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_SET_RM_MASK  0x0000000000010000ULL
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_SET bit fields values */
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_SET register accessor */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_SET(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_SET_OFFSET))

/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_CLEAR register definition */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_CLEAR_OFFSET     0x20
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_CLEAR_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_CLEAR_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_CLEAR register bit fields defines */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_CLEAR_PE_SHIFT 0
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_CLEAR_PE_MASK  0x000000000000FFFFULL
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_CLEAR_RM_SHIFT 16
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_CLEAR_RM_MASK  0x0000000000010000ULL
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_CLEAR bit fields values */
/* MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_CLEAR register accessor */
#define MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_CLEAR(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_CONTROL_WD_ACK_CLEAR_OFFSET))

#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_OFFSET 0x1100
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_ELEM_SIZE 0x28
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_ARRAY_SIZE 0x1
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_STATUS_OFFSET))

/* MPPA_PWR_CTRL_VECTOR_PROC_STATUS_WD register definition */
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_WD_OFFSET     0x0
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_WD_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_WD_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_VECTOR_PROC_STATUS_WD register bit fields defines */
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_WD_PE_SHIFT 0
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_WD_PE_MASK  0x000000000000FFFFULL
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_WD_RM_SHIFT 16
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_WD_RM_MASK  0x0000000000010000ULL
/* MPPA_PWR_CTRL_VECTOR_PROC_STATUS_WD bit fields values */
/* MPPA_PWR_CTRL_VECTOR_PROC_STATUS_WD register accessor */
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_WD(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_STATUS_WD_OFFSET))

/* MPPA_PWR_CTRL_VECTOR_PROC_STATUS_IDLE register definition */
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_IDLE_OFFSET     0x10
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_IDLE_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_IDLE_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_VECTOR_PROC_STATUS_IDLE register bit fields defines */
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_IDLE_PE_SHIFT 0
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_IDLE_PE_MASK  0x00000000FFFFFFFFULL
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_IDLE_RM_SHIFT 32
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_IDLE_RM_MASK  0x0000000300000000ULL
/* MPPA_PWR_CTRL_VECTOR_PROC_STATUS_IDLE bit fields values */
/* MPPA_PWR_CTRL_VECTOR_PROC_STATUS_IDLE register accessor */
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_IDLE(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_STATUS_IDLE_OFFSET))

/* MPPA_PWR_CTRL_VECTOR_PROC_STATUS_FSM register definition */
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_FSM_OFFSET     0x20
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_FSM_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_FSM_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_VECTOR_PROC_STATUS_FSM register bit fields defines */
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_FSM_PE_SHIFT 0
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_FSM_PE_MASK  0x00000000FFFFFFFFULL
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_FSM_RM_SHIFT 32
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_FSM_RM_MASK  0x0000000300000000ULL
/* MPPA_PWR_CTRL_VECTOR_PROC_STATUS_FSM bit fields values */
/* MPPA_PWR_CTRL_VECTOR_PROC_STATUS_FSM register accessor */
#define MPPA_PWR_CTRL_VECTOR_PROC_STATUS_FSM(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_VECTOR_PROC_STATUS_FSM_OFFSET))

#define MPPA_PWR_CTRL_GLOBAL_CONFIG_OFFSET 0x4040
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_ELEM_SIZE 0x40
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_ARRAY_SIZE 0x1
#define MPPA_PWR_CTRL_GLOBAL_CONFIG(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_GLOBAL_CONFIG_OFFSET))

/* MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE register definition */
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_OFFSET     0x0
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE register bit fields defines */
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_USER_EN_SHIFT          0
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_USER_EN_MASK           0x0000000000000001ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_PE_EN_SHIFT            1
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_PE_EN_MASK             0x0000000000000002ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_L2_CACHE_EN_SHIFT      2
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_L2_CACHE_EN_MASK       0x0000000000000004ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_SBANK_LOCK_DSU_SHIFT   3
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_SBANK_LOCK_DSU_MASK    0x0000000000000008ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_SBANK_LOCK_WAXI_SHIFT  4
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_SBANK_LOCK_WAXI_MASK   0x0000000000000010ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_SBANK_LOCK_RAXI_SHIFT  5
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_SBANK_LOCK_RAXI_MASK   0x0000000000000020ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_SBANK_LOCK_DMATX_SHIFT 6
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_SBANK_LOCK_DMATX_MASK  0x0000000000000040ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_SBANK_LOCK_DMARX_SHIFT 7
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_SBANK_LOCK_DMARX_MASK  0x0000000000000080ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_LOCK_SHIFT             8
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_LOCK_MASK              0x0000000000000100ULL
/* MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE bit fields values */
/* MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE register accessor */
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_GLOBAL_CONFIG_WRITE_OFFSET))

/* MPPA_PWR_CTRL_GLOBAL_CONFIG_SET register definition */
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_OFFSET     0x10
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_GLOBAL_CONFIG_SET register bit fields defines */
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_USER_EN_SHIFT          0
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_USER_EN_MASK           0x0000000000000001ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_PE_EN_SHIFT            1
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_PE_EN_MASK             0x0000000000000002ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_L2_CACHE_EN_SHIFT      2
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_L2_CACHE_EN_MASK       0x0000000000000004ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_SBANK_LOCK_DSU_SHIFT   3
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_SBANK_LOCK_DSU_MASK    0x0000000000000008ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_SBANK_LOCK_WAXI_SHIFT  4
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_SBANK_LOCK_WAXI_MASK   0x0000000000000010ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_SBANK_LOCK_RAXI_SHIFT  5
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_SBANK_LOCK_RAXI_MASK   0x0000000000000020ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_SBANK_LOCK_DMATX_SHIFT 6
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_SBANK_LOCK_DMATX_MASK  0x0000000000000040ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_SBANK_LOCK_DMARX_SHIFT 7
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_SBANK_LOCK_DMARX_MASK  0x0000000000000080ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_LOCK_SHIFT             8
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_LOCK_MASK              0x0000000000000100ULL
/* MPPA_PWR_CTRL_GLOBAL_CONFIG_SET bit fields values */
/* MPPA_PWR_CTRL_GLOBAL_CONFIG_SET register accessor */
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_SET(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_GLOBAL_CONFIG_SET_OFFSET))

/* MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR register definition */
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_OFFSET     0x20
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR register bit fields defines */
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_USER_EN_SHIFT          0
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_USER_EN_MASK           0x0000000000000001ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_PE_EN_SHIFT            1
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_PE_EN_MASK             0x0000000000000002ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_L2_CACHE_EN_SHIFT      2
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_L2_CACHE_EN_MASK       0x0000000000000004ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_SBANK_LOCK_DSU_SHIFT   3
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_SBANK_LOCK_DSU_MASK    0x0000000000000008ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_SBANK_LOCK_WAXI_SHIFT  4
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_SBANK_LOCK_WAXI_MASK   0x0000000000000010ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_SBANK_LOCK_RAXI_SHIFT  5
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_SBANK_LOCK_RAXI_MASK   0x0000000000000020ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_SBANK_LOCK_DMATX_SHIFT 6
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_SBANK_LOCK_DMATX_MASK  0x0000000000000040ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_SBANK_LOCK_DMARX_SHIFT 7
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_SBANK_LOCK_DMARX_MASK  0x0000000000000080ULL
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_LOCK_SHIFT             8
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_LOCK_MASK              0x0000000000000100ULL
/* MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR bit fields values */
/* MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR register accessor */
#define MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_GLOBAL_CONFIG_CLEAR_OFFSET))

/* MPPA_PWR_CTRL_GLOBAL_STATUS register definition */
#define MPPA_PWR_CTRL_GLOBAL_STATUS_OFFSET     0x4080
#define MPPA_PWR_CTRL_GLOBAL_STATUS_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_GLOBAL_STATUS_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_GLOBAL_STATUS register bit fields defines */
#define MPPA_PWR_CTRL_GLOBAL_STATUS_RM_WUP_SHIFT        0
#define MPPA_PWR_CTRL_GLOBAL_STATUS_RM_WUP_MASK         0x0000000000000001ULL
#define MPPA_PWR_CTRL_GLOBAL_STATUS_RESET_SHIFT         1
#define MPPA_PWR_CTRL_GLOBAL_STATUS_RESET_MASK          0x0000000000000002ULL
#define MPPA_PWR_CTRL_GLOBAL_STATUS_CLK_EN_SHIFT        2
#define MPPA_PWR_CTRL_GLOBAL_STATUS_CLK_EN_MASK         0x0000000000000004ULL
#define MPPA_PWR_CTRL_GLOBAL_STATUS_SHUF_DIS_SHIFT      3
#define MPPA_PWR_CTRL_GLOBAL_STATUS_SHUF_DIS_MASK       0x0000000000000008ULL
#define MPPA_PWR_CTRL_GLOBAL_STATUS_NOC_IDLE_SHIFT      4
#define MPPA_PWR_CTRL_GLOBAL_STATUS_NOC_IDLE_MASK       0x0000000000000010ULL
#define MPPA_PWR_CTRL_GLOBAL_STATUS_DBG_FIFO_IDLE_SHIFT 5
#define MPPA_PWR_CTRL_GLOBAL_STATUS_DBG_FIFO_IDLE_MASK  0x0000000000000020ULL
#define MPPA_PWR_CTRL_GLOBAL_STATUS_WATCHDOG_SHIFT      6
#define MPPA_PWR_CTRL_GLOBAL_STATUS_WATCHDOG_MASK       0x0000000000000040ULL
#define MPPA_PWR_CTRL_GLOBAL_STATUS_AXI_IDLE_SHIFT      7
#define MPPA_PWR_CTRL_GLOBAL_STATUS_AXI_IDLE_MASK       0x0000000000000080ULL
/* MPPA_PWR_CTRL_GLOBAL_STATUS bit fields values */
/* MPPA_PWR_CTRL_GLOBAL_STATUS register accessor */
#define MPPA_PWR_CTRL_GLOBAL_STATUS(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_GLOBAL_STATUS_OFFSET))

#define MPPA_PWR_CTRL_RM_CONTROL_OFFSET 0x40C0
#define MPPA_PWR_CTRL_RM_CONTROL_ELEM_SIZE 0x40
#define MPPA_PWR_CTRL_RM_CONTROL_ARRAY_SIZE 0x1
#define MPPA_PWR_CTRL_RM_CONTROL(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_RM_CONTROL_OFFSET))

/* MPPA_PWR_CTRL_RM_CONTROL_WRITE register definition */
#define MPPA_PWR_CTRL_RM_CONTROL_WRITE_OFFSET     0x0
#define MPPA_PWR_CTRL_RM_CONTROL_WRITE_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_RM_CONTROL_WRITE_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_RM_CONTROL_WRITE register bit fields defines */
#define MPPA_PWR_CTRL_RM_CONTROL_WRITE_WAKEUP_SHIFT          0
#define MPPA_PWR_CTRL_RM_CONTROL_WRITE_WAKEUP_MASK           0x0000000000000001ULL
#define MPPA_PWR_CTRL_RM_CONTROL_WRITE_RESET_ON_WAKEUP_SHIFT 1
#define MPPA_PWR_CTRL_RM_CONTROL_WRITE_RESET_ON_WAKEUP_MASK  0x0000000000000002ULL
#define MPPA_PWR_CTRL_RM_CONTROL_WRITE_WD_ACK_SHIFT          2
#define MPPA_PWR_CTRL_RM_CONTROL_WRITE_WD_ACK_MASK           0x0000000000000004ULL
/* MPPA_PWR_CTRL_RM_CONTROL_WRITE bit fields values */
/* MPPA_PWR_CTRL_RM_CONTROL_WRITE register accessor */
#define MPPA_PWR_CTRL_RM_CONTROL_WRITE(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_RM_CONTROL_WRITE_OFFSET))

/* MPPA_PWR_CTRL_RM_CONTROL_SET register definition */
#define MPPA_PWR_CTRL_RM_CONTROL_SET_OFFSET     0x10
#define MPPA_PWR_CTRL_RM_CONTROL_SET_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_RM_CONTROL_SET_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_RM_CONTROL_SET register bit fields defines */
#define MPPA_PWR_CTRL_RM_CONTROL_SET_WAKEUP_SHIFT          0
#define MPPA_PWR_CTRL_RM_CONTROL_SET_WAKEUP_MASK           0x0000000000000001ULL
#define MPPA_PWR_CTRL_RM_CONTROL_SET_RESET_ON_WAKEUP_SHIFT 1
#define MPPA_PWR_CTRL_RM_CONTROL_SET_RESET_ON_WAKEUP_MASK  0x0000000000000002ULL
#define MPPA_PWR_CTRL_RM_CONTROL_SET_WD_ACK_SHIFT          2
#define MPPA_PWR_CTRL_RM_CONTROL_SET_WD_ACK_MASK           0x0000000000000004ULL
/* MPPA_PWR_CTRL_RM_CONTROL_SET bit fields values */
/* MPPA_PWR_CTRL_RM_CONTROL_SET register accessor */
#define MPPA_PWR_CTRL_RM_CONTROL_SET(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_RM_CONTROL_SET_OFFSET))

/* MPPA_PWR_CTRL_RM_CONTROL_CLEAR register definition */
#define MPPA_PWR_CTRL_RM_CONTROL_CLEAR_OFFSET     0x20
#define MPPA_PWR_CTRL_RM_CONTROL_CLEAR_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_RM_CONTROL_CLEAR_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_RM_CONTROL_CLEAR register bit fields defines */
#define MPPA_PWR_CTRL_RM_CONTROL_CLEAR_WAKEUP_SHIFT          0
#define MPPA_PWR_CTRL_RM_CONTROL_CLEAR_WAKEUP_MASK           0x0000000000000001ULL
#define MPPA_PWR_CTRL_RM_CONTROL_CLEAR_RESET_ON_WAKEUP_SHIFT 1
#define MPPA_PWR_CTRL_RM_CONTROL_CLEAR_RESET_ON_WAKEUP_MASK  0x0000000000000002ULL
#define MPPA_PWR_CTRL_RM_CONTROL_CLEAR_WD_ACK_SHIFT          2
#define MPPA_PWR_CTRL_RM_CONTROL_CLEAR_WD_ACK_MASK           0x0000000000000004ULL
/* MPPA_PWR_CTRL_RM_CONTROL_CLEAR bit fields values */
/* MPPA_PWR_CTRL_RM_CONTROL_CLEAR register accessor */
#define MPPA_PWR_CTRL_RM_CONTROL_CLEAR(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_RM_CONTROL_CLEAR_OFFSET))

#define MPPA_PWR_CTRL_RM_STATUS_OFFSET 0x4100
#define MPPA_PWR_CTRL_RM_STATUS_ELEM_SIZE 0x10
#define MPPA_PWR_CTRL_RM_STATUS_ARRAY_SIZE 0x1
#define MPPA_PWR_CTRL_RM_STATUS(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_RM_STATUS_OFFSET))

/* MPPA_PWR_CTRL_RM_STATUS_PROC_STS register definition */
#define MPPA_PWR_CTRL_RM_STATUS_PROC_STS_OFFSET     0x0
#define MPPA_PWR_CTRL_RM_STATUS_PROC_STS_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_RM_STATUS_PROC_STS_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_RM_STATUS_PROC_STS register bit fields defines */
#define MPPA_PWR_CTRL_RM_STATUS_PROC_STS_WD_SHIFT   11
#define MPPA_PWR_CTRL_RM_STATUS_PROC_STS_WD_MASK    0x0000000000000800ULL
#define MPPA_PWR_CTRL_RM_STATUS_PROC_STS_IDLE_SHIFT 12
#define MPPA_PWR_CTRL_RM_STATUS_PROC_STS_IDLE_MASK  0x0000000000001000ULL
#define MPPA_PWR_CTRL_RM_STATUS_PROC_STS_FSM_SHIFT  16
#define MPPA_PWR_CTRL_RM_STATUS_PROC_STS_FSM_MASK   0x0000000000010000ULL
/* MPPA_PWR_CTRL_RM_STATUS_PROC_STS bit fields values */
/* MPPA_PWR_CTRL_RM_STATUS_PROC_STS register accessor */
#define MPPA_PWR_CTRL_RM_STATUS_PROC_STS(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_RM_STATUS_PROC_STS_OFFSET))

/* MPPA_PWR_CTRL_ECC_STATUS register definition */
#define MPPA_PWR_CTRL_ECC_STATUS_OFFSET     0x4140
#define MPPA_PWR_CTRL_ECC_STATUS_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_ECC_STATUS_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_ECC_STATUS register bit fields defines */
#define MPPA_PWR_CTRL_ECC_STATUS_SECC_SHIFT 0
#define MPPA_PWR_CTRL_ECC_STATUS_SECC_MASK  0x000000000000FFFFULL
#define MPPA_PWR_CTRL_ECC_STATUS_DECC_SHIFT 16
#define MPPA_PWR_CTRL_ECC_STATUS_DECC_MASK  0x00000000FFFF0000ULL
/* MPPA_PWR_CTRL_ECC_STATUS bit fields values */
/* MPPA_PWR_CTRL_ECC_STATUS register accessor */
#define MPPA_PWR_CTRL_ECC_STATUS(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_ECC_STATUS_OFFSET))

/* MPPA_PWR_CTRL_ECC_STATUS_CLEAR register definition */
#define MPPA_PWR_CTRL_ECC_STATUS_CLEAR_OFFSET     0x4150
#define MPPA_PWR_CTRL_ECC_STATUS_CLEAR_ELEM_SIZE  0x8
#define MPPA_PWR_CTRL_ECC_STATUS_CLEAR_ARRAY_SIZE 0x1
/* MPPA_PWR_CTRL_ECC_STATUS_CLEAR register bit fields defines */
#define MPPA_PWR_CTRL_ECC_STATUS_CLEAR_SECC_SHIFT 0
#define MPPA_PWR_CTRL_ECC_STATUS_CLEAR_SECC_MASK  0x000000000000FFFFULL
#define MPPA_PWR_CTRL_ECC_STATUS_CLEAR_DECC_SHIFT 16
#define MPPA_PWR_CTRL_ECC_STATUS_CLEAR_DECC_MASK  0x00000000FFFF0000ULL
/* MPPA_PWR_CTRL_ECC_STATUS_CLEAR bit fields values */
/* MPPA_PWR_CTRL_ECC_STATUS_CLEAR register accessor */
#define MPPA_PWR_CTRL_ECC_STATUS_CLEAR(BASE) \
	((void *) ((BASE) + MPPA_PWR_CTRL_ECC_STATUS_CLEAR_OFFSET))

#endif /* MPPA_PWR_CTRL_COOLIDGE */
