/* Generated by MDS for k1 */
#ifndef _ASM_K1C_SFR_DEFS_H
#define _ASM_K1C_SFR_DEFS_H

/* Register numbers */
#define K1C_SFR_PC 0 // Program Counter $pc $s0
#define K1C_SFR_PS 1 // Processing Status $ps $s1
#define K1C_SFR_SPC 2 // Shadow Program Counter $spc $s2
#define K1C_SFR_SPS 3 // Shadow Processing Status $sps $s3
#define K1C_SFR_SSPC 4 // Shadow Shadow Program Counter $sspc $s4
#define K1C_SFR_SSPS 5 // Shadow Shadow Processing Status $ssps $s5
#define K1C_SFR_SR3 6 // System Reserved 3 $sr3 $s6
#define K1C_SFR_SR4 7 // System Reserved 4 $sr4 $s7
#define K1C_SFR_CS 8 // Compute Status $cs $s8
#define K1C_SFR_RA 9 // Return Address $ra $s9
#define K1C_SFR_PI 10 // Processing Identification $pcr $s10
#define K1C_SFR_LS 11 // Loop Start Address $ls $s11
#define K1C_SFR_LE 12 // Loop Exit Address $le $s12
#define K1C_SFR_LC 13 // Loop Counter $lc $s13
#define K1C_SFR_EA 14 // Excepting Address $ea $s14
#define K1C_SFR_EV 15 // Exception Vector $ev $s15
#define K1C_SFR_EV0 16 // Event Register 0 $ev0 $s16
#define K1C_SFR_EV1 17 // Event Register 1 $ev1 $s17
#define K1C_SFR_EV2 18 // Event Register 2 $ev2 $s18
#define K1C_SFR_EV3 19 // Event Register 3 $ev3 $s19
#define K1C_SFR_EV4 20 // Event Register 4 $ev4 $s20
#define K1C_SFR_EV5 21 // Event Register 5 $ev5 $s21
#define K1C_SFR_RES0 22 // Reserved $res0 $s22
#define K1C_SFR_RES1 23 // Reserved $res1 $s23
#define K1C_SFR_PM0 24 // Performance Monitor 0 $pm0 $s24
#define K1C_SFR_PM1 25 // Performance Monitor 1 $pm1 $s25
#define K1C_SFR_PM2 26 // Performance Monitor 2 $pm2 $s26
#define K1C_SFR_PM3 27 // Performance Monitor 3 $pm3 $s27
#define K1C_SFR_PMC 28 // Performance Monitor Control $pmc $s28
#define K1C_SFR_SR0 29 // System Reserved 0 $sr0 $s29
#define K1C_SFR_SR1 30 // System Reserved 1 $sr1 $s30
#define K1C_SFR_SR2 31 // Page Table Root $sr2 $s31
#define K1C_SFR_T0V 32 // Timer 0 value $t0v $s32
#define K1C_SFR_T1V 33 // Timer 1 value $t1v $s33
#define K1C_SFR_T0R 34 // Timer 0 reload value $t0r $s34
#define K1C_SFR_T1R 35 // Timer 1 reload value $t1r $s35
#define K1C_SFR_TC 36 // Timer Control $tcr $s36
#define K1C_SFR_WDC 37 // Watchdog Counter $wdc $s37
#define K1C_SFR_WDR 38 // Watchdog Reload $wdr $s38
#define K1C_SFR_ILE 39 // Interrupt Line Enable $ile $s39
#define K1C_SFR_ILL 40 // Interrupt Levels Low $ill $s40
#define K1C_SFR_ILH 41 // Interrupt Levels High $ilh $s41
#define K1C_SFR_MMC 42 // Memory Management Control $mmc $s42
#define K1C_SFR_TEL 43 // TLB Entry Low $tel $s43
#define K1C_SFR_TEH 44 // TLB Entry High $teh $s44
#define K1C_SFR_DV 45 // Debug Vector $dv $s45
#define K1C_SFR_OCE0 46 // OCE Reserved 0 $oce0 $s46
#define K1C_SFR_OCE1 47 // OCE Reserved 1 $oce1 $s47
#define K1C_SFR_OCEC 48 // OCE Control $ocec $s48
#define K1C_SFR_OCEA 49 // OCE Address $ocea $s49
#define K1C_SFR_ES 50 // Exception Syndrome $es $s50
#define K1C_SFR_ILR 51 // Interrupt Line Request $ilr $s51
#define K1C_SFR_MES 52 // Memory Error Status $mes $s54

/* Register masks*/

#define K1C_MASK_PI_ALUD 0x2 // Size of the ALU (32 or 64 bits)
#define K1C_SHIFT_PI_ALUD  1
#define K1C_BYTE_PI_ALUD 0
#define K1C_BFX_PI_ALUD 0x2
#define K1C_HALF_PI_ALUD 0
#define K1C_HFX_PI_ALUD 0x2

#define K1C_MASK_ES_AS 0x3e000 // Access Size
#define K1C_SHIFT_ES_AS  13

#define K1C_MASK_MMC_ASN 0x1ff // Address Space Number
#define K1C_SHIFT_MMC_ASN  0
#define K1C_HALF_MMC_ASN 0
#define K1C_HFX_MMC_ASN 0x1ff

#define K1C_MASK_ES_BS 0x3c0000 // Bundle Size
#define K1C_SHIFT_ES_BS  18
#define K1C_BYTE_ES_BS 2
#define K1C_BFX_ES_BS 0x3c
#define K1C_HALF_ES_BS 1
#define K1C_HFX_ES_BS 0x3c

#define K1C_MASK_CS_CC 0xffff0000 // Carry Counter
#define K1C_SHIFT_CS_CC  16
#define K1C_HALF_CS_CC 1
#define K1C_HFX_CS_CC 0xffff

#define K1C_MASK_TC_CDR 0xffff // Clock Division Ratio
#define K1C_SHIFT_TC_CDR  0
#define K1C_HALF_TC_CDR 0
#define K1C_HFX_TC_CDR 0xffff

#define K1C_MASK_PS_CE 0x200000 // l1 Coherency Enable
#define K1C_SHIFT_PS_CE  21
#define K1C_BYTE_PS_CE 2
#define K1C_BFX_PS_CE 0x20
#define K1C_HALF_PS_CE 1
#define K1C_HFX_PS_CE 0x20

#define K1C_MASK_CS_CS 0xffffffff // Compute Status
#define K1C_SHIFT_CS_CS  0

#define K1C_MASK_PS_DCE 0x400 // Data Cache Enable
#define K1C_SHIFT_PS_DCE  10
#define K1C_BYTE_PS_DCE 1
#define K1C_BFX_PS_DCE 0x4
#define K1C_HALF_PS_DCE 0
#define K1C_HFX_PS_DCE 0x400

#define K1C_MASK_MES_DDEE 0x100 // Data DEcc Error.
#define K1C_SHIFT_MES_DDEE  8
#define K1C_BYTE_MES_DDEE 1
#define K1C_BFX_MES_DDEE 0x1
#define K1C_HALF_MES_DDEE 0
#define K1C_HFX_MES_DDEE 0x100

#define K1C_MASK_MES_DILDE 0x40 // Data cache Invalidated Line following dDEcc error.
#define K1C_SHIFT_MES_DILDE  6
#define K1C_BYTE_MES_DILDE 0
#define K1C_BFX_MES_DILDE 0x40
#define K1C_HALF_MES_DILDE 0
#define K1C_HFX_MES_DILDE 0x40

#define K1C_MASK_MES_DILPA 0x80 // Data cache Invalidated Line following dPArity error.
#define K1C_SHIFT_MES_DILPA  7
#define K1C_BYTE_MES_DILPA 0
#define K1C_BFX_MES_DILPA 0x80
#define K1C_HALF_MES_DILPA 0
#define K1C_HFX_MES_DILPA 0x80

#define K1C_MASK_MES_DILSY 0x20 // Data cache Invalidated Line following dSYs error.
#define K1C_SHIFT_MES_DILSY  5
#define K1C_BYTE_MES_DILSY 0
#define K1C_BFX_MES_DILSY 0x20
#define K1C_HALF_MES_DILSY 0
#define K1C_HFX_MES_DILSY 0x20

#define K1C_MASK_PS_DM 0x2 // Diagnostic Mode
#define K1C_SHIFT_PS_DM  1
#define K1C_BYTE_PS_DM 0
#define K1C_BFX_PS_DM 0x2
#define K1C_HALF_PS_DM 0
#define K1C_HFX_PS_DM 0x2

#define K1C_MASK_PMC_DMC 0x40000 // Disengage Monitor Clock
#define K1C_SHIFT_PMC_DMC  18
#define K1C_BYTE_PMC_DMC 2
#define K1C_BFX_PMC_DMC 0x4
#define K1C_HALF_PMC_DMC 1
#define K1C_HFX_PMC_DMC 0x4

#define K1C_MASK_MES_DSE 0x10 // Data Simple Ecc
#define K1C_SHIFT_MES_DSE  4
#define K1C_BYTE_MES_DSE 0
#define K1C_BFX_MES_DSE 0x10
#define K1C_HALF_MES_DSE 0
#define K1C_HFX_MES_DSE 0x10

#define K1C_MASK_PS_DSEM 0x100000 // Data Simple ecc Exception Mode
#define K1C_SHIFT_PS_DSEM  20
#define K1C_BYTE_PS_DSEM 2
#define K1C_BFX_PS_DSEM 0x10
#define K1C_HALF_PS_DSEM 1
#define K1C_HFX_PS_DSEM 0x10

#define K1C_MASK_MES_DSYE 0x200 // Data dSYs Error.
#define K1C_SHIFT_MES_DSYE  9
#define K1C_BYTE_MES_DSYE 1
#define K1C_BFX_MES_DSYE 0x2
#define K1C_HALF_MES_DSYE 0
#define K1C_HFX_MES_DSYE 0x200

#define K1C_MASK_TC_DTC 0x800000 // Disengage Timer Clock
#define K1C_SHIFT_TC_DTC  23
#define K1C_BYTE_TC_DTC 2
#define K1C_BFX_TC_DTC 0x80
#define K1C_HALF_TC_DTC 1
#define K1C_HFX_TC_DTC 0x80

#define K1C_MASK_CS_DZ 0x4 // IEEE 754 Divide by Zero
#define K1C_SHIFT_CS_DZ  2
#define K1C_BYTE_CS_DZ 0
#define K1C_BFX_CS_DZ 0x4
#define K1C_HALF_CS_DZ 0
#define K1C_HFX_CS_DZ 0x4

#define K1C_MASK_MMC_E 0x80000000 // Error Flag
#define K1C_SHIFT_MMC_E  31
#define K1C_BYTE_MMC_E 3
#define K1C_BFX_MMC_E 0x80
#define K1C_HALF_MMC_E 1
#define K1C_HFX_MMC_E 0x8000

#define K1C_MASK_ES_EC 0x7 // Exception Class
#define K1C_SHIFT_ES_EC  0
#define K1C_BYTE_ES_EC 0
#define K1C_BFX_ES_EC 0x7
#define K1C_HALF_ES_EC 0
#define K1C_HFX_ES_EC 0x7

#define K1C_MASK_ES_ED 0xffffff8 // Exception Details
#define K1C_SHIFT_ES_ED  3

#define K1C_MASK_ES_ES 0xffffffff // Exception Syndrome
#define K1C_SHIFT_ES_ES  0

#define K1C_MASK_PS_ET 0x4 // Exception Taken
#define K1C_SHIFT_PS_ET  2
#define K1C_BYTE_PS_ET 0
#define K1C_BFX_PS_ET 0x4
#define K1C_HALF_PS_ET 0
#define K1C_HFX_PS_ET 0x4

#define K1C_MASK_PI_FPUE 0x8 // FPU Enable
#define K1C_SHIFT_PI_FPUE  3
#define K1C_BYTE_PI_FPUE 0
#define K1C_BFX_PI_FPUE 0x8
#define K1C_HALF_PI_FPUE 0
#define K1C_HFX_PI_FPUE 0x8

#define K1C_MASK_PS_GME 0xc0 // Group Mode Enable
#define K1C_SHIFT_PS_GME  6
#define K1C_BYTE_PS_GME 0
#define K1C_BFX_PS_GME 0xc0
#define K1C_HALF_PS_GME 0
#define K1C_HFX_PS_GME 0xc0

#define K1C_MASK_PS_HLE 0x20 // Hardware Loop Enable
#define K1C_SHIFT_PS_HLE  5
#define K1C_BYTE_PS_HLE 0
#define K1C_BFX_PS_HLE 0x20
#define K1C_HALF_PS_HLE 0
#define K1C_HFX_PS_HLE 0x20

#define K1C_MASK_ES_HTC 0xf8 // Hardware Trap Cause
#define K1C_SHIFT_ES_HTC  3
#define K1C_BYTE_ES_HTC 0
#define K1C_BFX_ES_HTC 0xf8
#define K1C_HALF_ES_HTC 0
#define K1C_HFX_ES_HTC 0xf8

#define K1C_MASK_PS_HTD 0x8 // Hardware Trap Disable
#define K1C_SHIFT_PS_HTD  3
#define K1C_BYTE_PS_HTD 0
#define K1C_BFX_PS_HTD 0x8
#define K1C_HALF_PS_HTD 0
#define K1C_HFX_PS_HTD 0x8

#define K1C_MASK_CS_IC 0x1 // Integer Carry
#define K1C_SHIFT_CS_IC  0
#define K1C_BYTE_CS_IC 0
#define K1C_BFX_CS_IC 0x1
#define K1C_HALF_CS_IC 0
#define K1C_HFX_CS_IC 0x1

#define K1C_MASK_PS_ICE 0x100 // Instruction Cache Enable
#define K1C_SHIFT_PS_ICE  8
#define K1C_BYTE_PS_ICE 1
#define K1C_BFX_PS_ICE 0x1
#define K1C_HALF_PS_ICE 0
#define K1C_HFX_PS_ICE 0x100

#define K1C_MASK_PS_IE 0x10 // Interrupt Enable
#define K1C_SHIFT_PS_IE  4
#define K1C_BYTE_PS_IE 0
#define K1C_BFX_PS_IE 0x10
#define K1C_HALF_PS_IE 0
#define K1C_HFX_PS_IE 0x10

#define K1C_MASK_PS_IL 0xf000 // Interrupt Level
#define K1C_SHIFT_PS_IL  12
#define K1C_BYTE_PS_IL 1
#define K1C_BFX_PS_IL 0xf0
#define K1C_HALF_PS_IL 0
#define K1C_HFX_PS_IL 0xf000

#define K1C_MASK_CS_IN 0x20 // IEEE 754 Inexact
#define K1C_SHIFT_CS_IN  5
#define K1C_BYTE_CS_IN 0
#define K1C_BFX_CS_IN 0x20
#define K1C_HALF_CS_IN 0
#define K1C_HFX_CS_IN 0x20

#define K1C_MASK_CS_IO 0x2 // IEEE 754 Invalid Operation
#define K1C_SHIFT_CS_IO  1
#define K1C_BYTE_CS_IO 0
#define K1C_BFX_CS_IO 0x2
#define K1C_HALF_CS_IO 0
#define K1C_HFX_CS_IO 0x2

#define K1C_MASK_ES_ITI 0x3ff000 // InTerrupt Info
#define K1C_SHIFT_ES_ITI  12

#define K1C_MASK_ES_ITL 0xf00 // InTerrupt Level
#define K1C_SHIFT_ES_ITL  8
#define K1C_BYTE_ES_ITL 1
#define K1C_BFX_ES_ITL 0xf
#define K1C_HALF_ES_ITL 0
#define K1C_HFX_ES_ITL 0xf00

#define K1C_MASK_ES_ITN 0xf8 // InTerrupt Number
#define K1C_SHIFT_ES_ITN  3
#define K1C_BYTE_ES_ITN 0
#define K1C_BFX_ES_ITN 0xf8
#define K1C_HALF_ES_ITN 0
#define K1C_HFX_ES_ITN 0xf8

#define K1C_MASK_PS_L2E 0x400000 // L2 cache Enable
#define K1C_SHIFT_PS_L2E  22
#define K1C_BYTE_PS_L2E 2
#define K1C_BFX_PS_L2E 0x40
#define K1C_HALF_PS_L2E 1
#define K1C_HFX_PS_L2E 0x40

#define K1C_MASK_PI_MAUE 0x4 // MAU Enable
#define K1C_SHIFT_PI_MAUE  2
#define K1C_BYTE_PI_MAUE 0
#define K1C_BFX_PI_MAUE 0x4
#define K1C_HALF_PI_MAUE 0
#define K1C_HFX_PI_MAUE 0x4

#define K1C_MASK_MES_MES 0xffffffff // Memory Error Status
#define K1C_SHIFT_MES_MES  0

#define K1C_MASK_MMC_MMC 0xffffffff // Memory Management Control
#define K1C_SHIFT_MMC_MMC  0

#define K1C_MASK_PS_MME 0x800 // Memory Management Enable
#define K1C_SHIFT_PS_MME  11
#define K1C_BYTE_PS_MME 1
#define K1C_BFX_PS_MME 0x8
#define K1C_HALF_PS_MME 0
#define K1C_HFX_PS_MME 0x800

#define K1C_MASK_PI_NID 0xff0000 // Node Identifier in system
#define K1C_SHIFT_PI_NID  16
#define K1C_BYTE_PI_NID 2
#define K1C_BFX_PI_NID 0xff
#define K1C_HALF_PI_NID 1
#define K1C_HFX_PI_NID 0xff

#define K1C_MASK_ES_NTA 0x800 // Non-Trapping Access
#define K1C_SHIFT_ES_NTA  11
#define K1C_BYTE_ES_NTA 1
#define K1C_BFX_ES_NTA 0x8
#define K1C_HALF_ES_NTA 0
#define K1C_HFX_ES_NTA 0x800

#define K1C_MASK_CS_OV 0x8 // IEEE 754 Overflow
#define K1C_SHIFT_CS_OV  3
#define K1C_BYTE_CS_OV 0
#define K1C_BFX_CS_OV 0x8
#define K1C_HALF_CS_OV 0
#define K1C_HFX_CS_OV 0x8

#define K1C_MASK_PS_P64 0x20000 // Privilege mode set to 64 bits.
#define K1C_SHIFT_PS_P64  17
#define K1C_BYTE_PS_P64 2
#define K1C_BFX_PS_P64 0x2
#define K1C_HALF_PS_P64 1
#define K1C_HFX_PS_P64 0x2

#define K1C_MASK_MMC_PAR 0x40000000 // PARity error flag
#define K1C_SHIFT_MMC_PAR  30
#define K1C_BYTE_MMC_PAR 3
#define K1C_BFX_MMC_PAR 0x40
#define K1C_HALF_MMC_PAR 1
#define K1C_HFX_MMC_PAR 0x4000

#define K1C_MASK_PI_PI 0xffffffff // Processing Identification
#define K1C_SHIFT_PI_PI  0

#define K1C_MASK_PI_PID 0xf800 // Processing Identifier in cluster
#define K1C_SHIFT_PI_PID  11
#define K1C_BYTE_PI_PID 1
#define K1C_BFX_PI_PID 0xf8
#define K1C_HALF_PI_PID 0
#define K1C_HFX_PI_PID 0xf800

#define K1C_MASK_MES_PILDE 0x4 // Program cache Invalidated Line following pDEcc error.
#define K1C_SHIFT_MES_PILDE  2
#define K1C_BYTE_MES_PILDE 0
#define K1C_BFX_MES_PILDE 0x4
#define K1C_HALF_MES_PILDE 0
#define K1C_HFX_MES_PILDE 0x4

#define K1C_MASK_MES_PILPA 0x8 // Program cache Invalidated Line following pPArity error.
#define K1C_SHIFT_MES_PILPA  3
#define K1C_BYTE_MES_PILPA 0
#define K1C_BFX_MES_PILPA 0x8
#define K1C_HALF_MES_PILPA 0
#define K1C_HFX_MES_PILPA 0x8

#define K1C_MASK_MES_PILSY 0x2 // Program cache Invalidated Line following pSYs error.
#define K1C_SHIFT_MES_PILSY  1
#define K1C_BYTE_MES_PILSY 0
#define K1C_BFX_MES_PILSY 0x2
#define K1C_HALF_MES_PILSY 0
#define K1C_HFX_MES_PILSY 0x2

#define K1C_MASK_PS_PM 0x1 // Privilege Mode
#define K1C_SHIFT_PS_PM  0
#define K1C_BYTE_PS_PM 0
#define K1C_BFX_PS_PM 0x1
#define K1C_HALF_PS_PM 0
#define K1C_HFX_PS_PM 0x1

#define K1C_MASK_PMC_PM01 0x10000 // PM0 and PM1 Chaining
#define K1C_SHIFT_PMC_PM01  16
#define K1C_BYTE_PMC_PM01 2
#define K1C_BFX_PMC_PM01 0x1
#define K1C_HALF_PMC_PM01 1
#define K1C_HFX_PMC_PM01 0x1

#define K1C_MASK_PMC_PM0C 0xf // PM0 Configuration
#define K1C_SHIFT_PMC_PM0C  0
#define K1C_BYTE_PMC_PM0C 0
#define K1C_BFX_PMC_PM0C 0xf
#define K1C_HALF_PMC_PM0C 0
#define K1C_HFX_PMC_PM0C 0xf

#define K1C_MASK_PMC_PM1C 0xf0 // PM1 Configuration
#define K1C_SHIFT_PMC_PM1C  4
#define K1C_BYTE_PMC_PM1C 0
#define K1C_BFX_PMC_PM1C 0xf0
#define K1C_HALF_PMC_PM1C 0
#define K1C_HFX_PMC_PM1C 0xf0

#define K1C_MASK_PMC_PM23 0x20000 // PM2 and PM3 Chaining
#define K1C_SHIFT_PMC_PM23  17
#define K1C_BYTE_PMC_PM23 2
#define K1C_BFX_PMC_PM23 0x2
#define K1C_HALF_PMC_PM23 1
#define K1C_HFX_PMC_PM23 0x2

#define K1C_MASK_PMC_PM2C 0xf00 // PM2 Configuration
#define K1C_SHIFT_PMC_PM2C  8
#define K1C_BYTE_PMC_PM2C 1
#define K1C_BFX_PMC_PM2C 0xf
#define K1C_HALF_PMC_PM2C 0
#define K1C_HFX_PMC_PM2C 0xf00

#define K1C_MASK_PMC_PM3C 0xf000 // PM3 Configuration
#define K1C_SHIFT_PMC_PM3C  12
#define K1C_BYTE_PMC_PM3C 1
#define K1C_BFX_PMC_PM3C 0xf0
#define K1C_HALF_PMC_PM3C 0
#define K1C_HFX_PMC_PM3C 0xf000

#define K1C_MASK_PMC_PMC 0xffffffff // Performance Monitor Control
#define K1C_SHIFT_PMC_PMC  0

#define K1C_MASK_MMC_PMJ 0x3c00 // Page size Mask in JTLB
#define K1C_SHIFT_MMC_PMJ  10
#define K1C_BYTE_MMC_PMJ 1
#define K1C_BFX_MMC_PMJ 0x3c
#define K1C_HALF_MMC_PMJ 0
#define K1C_HFX_MMC_PMJ 0x3c00

#define K1C_MASK_PS_PS 0xffffffff // Processing Status
#define K1C_SHIFT_PS_PS  0

#define K1C_MASK_MES_PSE 0x1 // Program Simple Ecc
#define K1C_SHIFT_MES_PSE  0
#define K1C_BYTE_MES_PSE 0
#define K1C_BFX_MES_PSE 0x1
#define K1C_HALF_MES_PSE 0
#define K1C_HFX_MES_PSE 0x1

#define K1C_MASK_MMC_PTC 0x30000 // Protection Trap Cause
#define K1C_SHIFT_MMC_PTC  16
#define K1C_BYTE_MMC_PTC 2
#define K1C_BFX_MMC_PTC 0x3
#define K1C_HALF_MMC_PTC 1
#define K1C_HFX_MMC_PTC 0x3

#define K1C_MASK_ES_RI 0xfc00000 // Register Index
#define K1C_SHIFT_ES_RI  22
#define K1C_HALF_ES_RI 1
#define K1C_HFX_ES_RI 0xfc0

#define K1C_MASK_PI_RID 0xff000000 // Revision ID
#define K1C_SHIFT_PI_RID  24
#define K1C_BYTE_PI_RID 3
#define K1C_BFX_PI_RID 0xff
#define K1C_HALF_PI_RID 1
#define K1C_HFX_PI_RID 0xff00

#define K1C_MASK_CS_RM 0x300 // IEEE 754 Rounding Mode
#define K1C_SHIFT_CS_RM  8
#define K1C_BYTE_CS_RM 1
#define K1C_BFX_CS_RM 0x3
#define K1C_HALF_CS_RM 0
#define K1C_HFX_CS_RM 0x300

#define K1C_MASK_ES_RWX 0x700 // Read Write Execute
#define K1C_SHIFT_ES_RWX  8
#define K1C_BYTE_ES_RWX 1
#define K1C_BFX_ES_RWX 0x7
#define K1C_HALF_ES_RWX 0
#define K1C_HFX_ES_RWX 0x700

#define K1C_MASK_MMC_S 0x200 // Speculative
#define K1C_SHIFT_MMC_S  9
#define K1C_BYTE_MMC_S 1
#define K1C_BFX_MMC_S 0x2
#define K1C_HALF_MMC_S 0
#define K1C_HFX_MMC_S 0x200

#define K1C_MASK_MMC_SB 0x10000000 // Select Buffer
#define K1C_SHIFT_MMC_SB  28
#define K1C_BYTE_MMC_SB 3
#define K1C_BFX_MMC_SB 0x10
#define K1C_HALF_MMC_SB 1
#define K1C_HFX_MMC_SB 0x1000

#define K1C_MASK_PI_SHDCE 0x10 // Shared Data Cache Enable
#define K1C_SHIFT_PI_SHDCE  4
#define K1C_BYTE_PI_SHDCE 0
#define K1C_BFX_PI_SHDCE 0x10
#define K1C_HALF_PI_SHDCE 0
#define K1C_HFX_PI_SHDCE 0x10

#define K1C_MASK_PMC_SMD 0x100000 // Stop Monitors in Debug
#define K1C_SHIFT_PMC_SMD  20
#define K1C_BYTE_PMC_SMD 2
#define K1C_BFX_PMC_SMD 0x10
#define K1C_HALF_PMC_SMD 1
#define K1C_HFX_PMC_SMD 0x10

#define K1C_MASK_PS_SME 0x40000 // Step Mode Enabled
#define K1C_SHIFT_PS_SME  18
#define K1C_BYTE_PS_SME 2
#define K1C_BFX_PS_SME 0x4
#define K1C_HALF_PS_SME 1
#define K1C_HFX_PS_SME 0x4

#define K1C_MASK_PMC_SMP 0x80000 // Stop Monitors in Privilege
#define K1C_SHIFT_PMC_SMP  19
#define K1C_BYTE_PMC_SMP 2
#define K1C_BFX_PMC_SMP 0x8
#define K1C_HALF_PMC_SMP 1
#define K1C_HFX_PMC_SMP 0x8

#define K1C_MASK_PS_SMR 0x80000 // Step Mode Ready
#define K1C_SHIFT_PS_SMR  19
#define K1C_BYTE_PS_SMR 2
#define K1C_BFX_PS_SMR 0x8
#define K1C_HALF_PS_SMR 1
#define K1C_HFX_PS_SMR 0x8

#define K1C_MASK_ES_SN 0x7ff8 // Syscall Number
#define K1C_SHIFT_ES_SN  3
#define K1C_HALF_ES_SN 0
#define K1C_HFX_ES_SN 0x7ff8

#define K1C_MASK_MMC_SNE 0x4000 // Speculative NOMAPPING Enable
#define K1C_SHIFT_MMC_SNE  14
#define K1C_BYTE_MMC_SNE 1
#define K1C_BFX_MMC_SNE 0x40
#define K1C_HALF_MMC_SNE 0
#define K1C_HFX_MMC_SNE 0x4000

#define K1C_MASK_MMC_SPE 0x8000 // Speculative PROTECTION Enable
#define K1C_SHIFT_MMC_SPE  15
#define K1C_BYTE_MMC_SPE 1
#define K1C_BFX_MMC_SPE 0x80
#define K1C_HALF_MMC_SPE 0
#define K1C_HFX_MMC_SPE 0x8000

#define K1C_MASK_SPS_SPS 0xffffffff // Shadow Processing Status
#define K1C_SHIFT_SPS_SPS  0

#define K1C_MASK_MMC_SS 0xfc00000 // Select Set
#define K1C_SHIFT_MMC_SS  22
#define K1C_HALF_MMC_SS 1
#define K1C_HFX_MMC_SS 0xfc0

#define K1C_MASK_SSPS_SSPS 0xffffffff // Shadow Shadow Processing Status
#define K1C_SHIFT_SSPS_SSPS  0

#define K1C_MASK_TC_STD 0x20000000 // Stop Timers if Debug
#define K1C_SHIFT_TC_STD  29
#define K1C_BYTE_TC_STD 3
#define K1C_BFX_TC_STD 0x20
#define K1C_HALF_TC_STD 1
#define K1C_HFX_TC_STD 0x2000

#define K1C_MASK_TC_STP 0x10000000 // Stop Timers if Privilege
#define K1C_SHIFT_TC_STP  28
#define K1C_BYTE_TC_STP 3
#define K1C_BFX_TC_STP 0x10
#define K1C_HALF_TC_STP 1
#define K1C_HFX_TC_STP 0x1000

#define K1C_MASK_MMC_SW 0x3c0000 // Select Way
#define K1C_SHIFT_MMC_SW  18
#define K1C_BYTE_MMC_SW 2
#define K1C_BFX_MMC_SW 0x3c
#define K1C_HALF_MMC_SW 1
#define K1C_HFX_MMC_SW 0x3c

#define K1C_MASK_TC_T0CE 0x10000 // Timer 0 Count Enable
#define K1C_SHIFT_TC_T0CE  16
#define K1C_BYTE_TC_T0CE 2
#define K1C_BFX_TC_T0CE 0x1
#define K1C_HALF_TC_T0CE 1
#define K1C_HFX_TC_T0CE 0x1

#define K1C_MASK_TC_T0IE 0x40000 // Timer 0 Interrupt Enable
#define K1C_SHIFT_TC_T0IE  18
#define K1C_BYTE_TC_T0IE 2
#define K1C_BFX_TC_T0IE 0x4
#define K1C_HALF_TC_T0IE 1
#define K1C_HFX_TC_T0IE 0x4

#define K1C_MASK_TC_T0ST 0x100000 // Timer 0 Status
#define K1C_SHIFT_TC_T0ST  20
#define K1C_BYTE_TC_T0ST 2
#define K1C_BFX_TC_T0ST 0x10
#define K1C_HALF_TC_T0ST 1
#define K1C_HFX_TC_T0ST 0x10

#define K1C_MASK_TC_T1CE 0x20000 // Timer 1 Count Enable
#define K1C_SHIFT_TC_T1CE  17
#define K1C_BYTE_TC_T1CE 2
#define K1C_BFX_TC_T1CE 0x2
#define K1C_HALF_TC_T1CE 1
#define K1C_HFX_TC_T1CE 0x2

#define K1C_MASK_TC_T1IE 0x80000 // Timer 1 Interrupt Enable
#define K1C_SHIFT_TC_T1IE  19
#define K1C_BYTE_TC_T1IE 2
#define K1C_BFX_TC_T1IE 0x8
#define K1C_HALF_TC_T1IE 1
#define K1C_HFX_TC_T1IE 0x8

#define K1C_MASK_TC_T1ST 0x200000 // Timer 1 Status
#define K1C_SHIFT_TC_T1ST  21
#define K1C_BYTE_TC_T1ST 2
#define K1C_BFX_TC_T1ST 0x20
#define K1C_HALF_TC_T1ST 1
#define K1C_HFX_TC_T1ST 0x20

#define K1C_MASK_TC_TC 0xffffffff // Timer Control
#define K1C_SHIFT_TC_TC  0

#define K1C_MASK_TC_TCE 0x400000 // Timer Chaining Enable
#define K1C_SHIFT_TC_TCE  22
#define K1C_BYTE_TC_TCE 2
#define K1C_BFX_TC_TCE 0x40
#define K1C_HALF_TC_TCE 1
#define K1C_HFX_TC_TCE 0x40

#define K1C_MASK_TEH_TEH 0xffffffffffffffff // TLB Entry High
#define K1C_SHIFT_TEH_TEH  0

#define K1C_MASK_TEH_ASN 0x1ff // Adress Space Number
#define K1C_SHIFT_TEH_ASN  0
#define K1C_HALF_TEH_ASN 0
#define K1C_HFX_TEH_ASN 0x1ff

#define K1C_MASK_TEH_G 0x200 // Global page indicator
#define K1C_SHIFT_TEH_G  9
#define K1C_BYTE_TEH_G 1
#define K1C_BFX_TEH_G 0x2
#define K1C_HALF_TEH_G 0
#define K1C_HFX_TEH_G 0x200

#define K1C_MASK_TEH_PN 0x1fffffff000 // Page Number
#define K1C_SHIFT_TEH_PN  12

#define K1C_MASK_TEH_PS 0xc00 // Page Size
#define K1C_SHIFT_TEH_PS  10
#define K1C_BYTE_TEH_PS 1
#define K1C_BFX_TEH_PS 0xc
#define K1C_HALF_TEH_PS 0
#define K1C_HFX_TEH_PS 0xc00

#define K1C_MASK_TEL_TEL 0xffffffffffffffff // TLB Entry Low
#define K1C_SHIFT_TEL_TEL  0

#define K1C_MASK_TEL_CP 0xc // Cache Policy
#define K1C_SHIFT_TEL_CP  2
#define K1C_BYTE_TEL_CP 0
#define K1C_BFX_TEL_CP 0xc
#define K1C_HALF_TEL_CP 0
#define K1C_HFX_TEL_CP 0xc

#define K1C_MASK_TEL_ES 0x3 // Entry Status
#define K1C_SHIFT_TEL_ES  0
#define K1C_BYTE_TEL_ES 0
#define K1C_BFX_TEL_ES 0x3
#define K1C_HALF_TEL_ES 0
#define K1C_HFX_TEL_ES 0x3

#define K1C_MASK_TEL_FN 0xfffffff000 // Frame Number
#define K1C_SHIFT_TEL_FN  12

#define K1C_MASK_TEL_PA 0xf0 // Protection Attributes
#define K1C_SHIFT_TEL_PA  4
#define K1C_BYTE_TEL_PA 0
#define K1C_BFX_TEL_PA 0xf0
#define K1C_HALF_TEL_PA 0
#define K1C_HFX_TEL_PA 0xf0

#define K1C_MASK_PS_U64 0x10000 // User Mode to set 64 bits.
#define K1C_SHIFT_PS_U64  16
#define K1C_BYTE_PS_U64 2
#define K1C_BFX_PS_U64 0x1
#define K1C_HALF_PS_U64 1
#define K1C_HFX_PS_U64 0x1

#define K1C_MASK_ES_UCA 0x1000 // Un-Cached Access
#define K1C_SHIFT_ES_UCA  12
#define K1C_BYTE_ES_UCA 1
#define K1C_BFX_ES_UCA 0x10
#define K1C_HALF_ES_UCA 0
#define K1C_HFX_ES_UCA 0x1000

#define K1C_MASK_CS_UN 0x10 // IEEE 754 Underflow
#define K1C_SHIFT_CS_UN  4
#define K1C_BYTE_CS_UN 0
#define K1C_BFX_CS_UN 0x10
#define K1C_HALF_CS_UN 0
#define K1C_HFX_CS_UN 0x10

#define K1C_MASK_PS_USE 0x200 // Uncached Streaming Enable
#define K1C_SHIFT_PS_USE  9
#define K1C_BYTE_PS_USE 1
#define K1C_BFX_PS_USE 0x2
#define K1C_HALF_PS_USE 0
#define K1C_HFX_PS_USE 0x200

#define K1C_MASK_TC_WDE 0x1000000 // Watchdog Decounting Enable
#define K1C_SHIFT_TC_WDE  24
#define K1C_BYTE_TC_WDE 3
#define K1C_BFX_TC_WDE 0x1
#define K1C_HALF_TC_WDE 1
#define K1C_HFX_TC_WDE 0x100

#define K1C_MASK_TC_WIE 0x2000000 // Watchdog Interrupt Enable
#define K1C_SHIFT_TC_WIE  25
#define K1C_BYTE_TC_WIE 3
#define K1C_BFX_TC_WIE 0x2
#define K1C_HALF_TC_WIE 1
#define K1C_HFX_TC_WIE 0x200

#define K1C_MASK_CS_WU 0x8000 // Wake-Up
#define K1C_SHIFT_CS_WU  15
#define K1C_BYTE_CS_WU 1
#define K1C_BFX_CS_WU 0x80
#define K1C_HALF_CS_WU 0
#define K1C_HFX_CS_WU 0x8000

#define K1C_MASK_TC_WUI 0x4000000 // Watchdog Underflow Inform
#define K1C_SHIFT_TC_WUI  26
#define K1C_BYTE_TC_WUI 3
#define K1C_BFX_TC_WUI 0x4
#define K1C_HALF_TC_WUI 1
#define K1C_HFX_TC_WUI 0x400

#define K1C_MASK_TC_WUS 0x8000000 // Watchdog Underflow Status
#define K1C_SHIFT_TC_WUS  27
#define K1C_BYTE_TC_WUS 3
#define K1C_BFX_TC_WUS 0x8
#define K1C_HALF_TC_WUS 1
#define K1C_HFX_TC_WUS 0x800
#endif
