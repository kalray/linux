* Kalray NWL PCIe Root Port Bridge DT description

The configuration of root complex is done in two differents nodes with
following structure :

pcie_subsys: XXXX {
	/**
	 * define properties common to all root complex
	 * Cf. kalray,subsys-pcie.txt
	 */

	pcie0: XXXX {
		/* definitions specific to root complex 0 */
	}

	...
	/* depending on nfurcation configuration up to 8 root complex might be
	 * present */
	...

	pcie7 : XXXX {
		/* definitions specific to root complex 7 */
	}
}

Required properties for pcie nodes:
This node define the properties of a single root complex.
(Depending on n-furcation there is up to 8 PCIe controller, thus this node may
be present several times)
- compatible: Should contain "kvx,kvx-pcie-rc"
- #address-cells: Address representation for root ports, set to <3>
- #size-cells: Size representation for root ports, set to <2>
- #interrupt-cells: specifies the number of cells needed to encode an
	interrupt source. The value must be 1.
- reg: Should contain Bridge, CSR, ecam physical address and length
- reg-names: Must include the following entries:
	"bridge_reg": bridge registers
	"csr_reg": core status registers
	"ecam_reg": configuration space region
	"bar_decoder": required only for controller 0, bar decoder region
- kalray,ctrl-num : the index of the controller
- kalray,ftu-dev : must contain a reference to syscon ftu device
- kalray,phycore-dev : must contain a reference to syscon phycore device
 device_type: must be "pci"
- interrupts: Should contain misc and legacy interrupt number
- interrupt-names: Must include the following entries:
	"intx": interrupt asserted when a legacy interrupt is received
	"misc": interrupt asserted when miscellaneous interrupt is received
- interrupt-map-mask and interrupt-map: standard PCI properties to define the
	mapping of the PCI interface to interrupt numbers.
- ranges: ranges for the PCI memory regions (I/O space region is not
	supported by hardware)
	Please refer to the standard PCI bus binding document for a more
	detailed explanation
- legacy-interrupt-controller: Interrupt controller device node for Legacy
	interrupts
	- interrupt-controller: identifies the node as an interrupt controller
	- #interrupt-cells: should be set to 1
	- #address-cells: specifies the number of cells needed to encode an
		address. The value must be 0.
- linux,pci-domain : define the index of the domain, when there is several root
    complex use a different number for each one, use 0 when there is only one
	root comples.
- kalray,nb-lane : define the number of PCIe lane used by the root complex

Example 1: use default configuration set by first stage boot loader (1X16)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

/* define iommu shared by all root complex controllers */
iommu_pci: iommu@5128401000 {
	compatible = "kalray,kvx-iommu";
	reg = <0x51 0x28401000 0x0 0x00000240>,
	      <0x51 0x28400000 0x0 0x00000240>;
	reg-names = "tx", "rx";
	interrupts = <101>, <102>, <103>,
		     <86>, <87>, <88>;
	interrupt-names = "tx_nomapping", "tx_protection", "tx_parity",
			  "rx_nomapping", "rx_protection", "rx_parity";
	interrupt-parent = <&itgen_misc>;
	#iommu-cells = <1>;
};

/* map ASN registers used by all root complex controllers */
pcie_rc_asn: pcie_rc_asn@5128500000 {
	compatible = "syscon";
	reg = <0x51 0x28500000 0x0 0x100000>;
};

/* map phy core registers used by all root complex controllers */
pcie_rc_phycore: pcie_rc_phycore@5128300000 {
	compatible = "syscon";
	reg = <0x51 0x28300000 0x0 0x1000>;
};

pcie_subsys: pcie_subsys@5128350000 {
	compatible = "kalray,subsys-pcie";
	reg = <0x51 0x28350000 0x0 0x1000>; /* pcie subsystem */
	reg-names = "pcie_subsys";
	kalray,ftu-dev = <&ftu>;
	kalray,phycore-dev = <&pcie_rc_phycore>;
	kalray,disable-dame = <0>; /* if 1 do not generate DAME when read access fail */
	#address-cells = <2>;
	#size-cells = <2>;
	ranges;

	pcie: pcie@512fd00000 {
		compatible = "kalray,kvx-pcie-rc";
		kalray,mst-asn-dev = <&pcie_rc_asn>;
		kalray,ftu-dev = <&ftu>;
		kalray,phycore-dev = <&pcie_rc_phycore>;
		kalray,ctrl-num = <0>;
		linux,pci-domain=<0>;
		#address-cells = <3>;
		#size-cells = <2>;
		#interrupt-cells = <1>;
		device_type = "pci";
		msi-parent = <&pcimsi_ctrl>;
		iommu-map = <0x0 &iommu_pci 0x0 0x10000>;
		iommu-map-mask = <0x0000>;
		kalray,nb-lane = <8>;
		reg = <0x51 0x2FD00000 0x0 0x40000>, /* Expresso dma bridge register mapping*/
			  <0x51 0x28100000 0x0 0x40000>, /* Expresso core register mapping */
			  <0x51 0x28340000 0x0 0x10000>, /* Bar decoder (essentially to disable it)*/
			  <0x51 0x30000000 0x0 0x10000000>; /* ECAM region mapping */
		reg-names = "bridge_reg", "csr_reg", "bar_decoder_reg", "ecam_reg";
		ranges = <0x02000000 0x00000000 0x00000000 0x00000052 0x00000000 0x00000000 0x10000000	/* non-prefetchable memory, 32 bits only*/
			  0x43000000 0x00000052 0x00000000 0x00000053 0x00000000 0x00000001 0x80000000>;  /* prefetchable memory*/
		bus-range = <0x00 0xff>;
		interrupt-map-mask = <0x0 0x0 0x0 0x7>;
		interrupt-map = <0x0 0x0 0x0 0x1 &pcie_intc 0x1>,
				<0x0 0x0 0x0 0x2 &pcie_intc 0x2>,
				<0x0 0x0 0x0 0x3 &pcie_intc 0x3>,
				<0x0 0x0 0x0 0x4 &pcie_intc 0x4>;
		interrupt-parent = <&itgen_misc>;
		interrupts = <2>, <3>;
		interrupt-names = "intx", "misc";
		pcie_intc: legacy-interrupt-controller {
			interrupt-controller;
			#address-cells = <0>;
			#interrupt-cells = <1>;
		};
	};
};


Example 2: Override default settings, reset PHY and force 2X8 n-furcation
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Most field are similar to example 1. Most field have a similar meaning to those
shown in example 1. The example bellow only show the fields that override the
values already set by the first stage bootloader. These field should only be
used for test or debug purpose.

pcie_subsys: pcie_subsys@5128350000 {
	...
	/* Cf. kalray,subsys-pcie.txt */
	kalray,force-phy-rst = <1>; /* when 1 force reset on all PCIe PHYs */
	kalray,ovrd-nfurc = <1>; /* if present define n-furcation mode --> 1 = 2X8*/

	pcie0: pcie@512fd00000 {
		...
		kalray,ctrl-num = <0>;
		linux,pci-domain = <0>; /* define PCI domain (it is recommended to use the controller num ) */
		...
	};
	pcie4: pcie@512fe00000 {
		...
		kalray,ctrl-num = <4>; /* in 2X8 n-furcation the second controller being used it the 4th one*/
		linux,pci-domain = <4>; /* This number MUST be different than other controllers one */
		...
	};
};

