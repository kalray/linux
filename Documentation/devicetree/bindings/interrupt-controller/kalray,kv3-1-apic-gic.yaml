# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/interrupt-controller/kalray,coolidge-apic-gic.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Kalray Coolidge SoC APIC-GIC

maintainers:
  - Yann Sionneau <ysionneau@kalray.eu>
  - Jules Maselbas <jmaselbas@kalray.eu>
  - Julian Vetter <jvetter@kalray.eu>

description: |
  Each cluster in the Coolidge SoC includes an Advanced Programmable Interrupt
  Controller (APIC) which is split in two part:
    - a Generic Interrupt Controller (referred as APIC-GIC)
    - a Mailbox Controller           (referred as APIC-Mailbox)
  The APIC-GIC acts as an intermediary interrupt controller, muxing/routing
  incoming interrupts to output interrupts connected to cores interrupts lines.
  The 139 possible input interrupt lines are organized as follow:
     - 128 from the mailbox controller (one it per mailboxes)
     - 1   from the NoC router
     - 5   from IOMMUs
     - 1   from L2 cache DMA job FIFO
     - 1   from cluster watchdog
     - 2   for SECC, DECC
     - 1   from Data NoC
  The 72 possible output interrupt lines:
     -  68 : 4 interrupts per core (17 cores)
     -  1 for L2 cache controller
     -  3 extra, unused, for padding

allOf:
  - $ref: /schemas/interrupt-controller.yaml#

properties:
  compatible:
    const: kalray,coolidge-v1-apic-gic

  reg:
    maxItems: 1

  "#interrupt-cells":
    const: 1
    description:
      The IRQ number.

  interrupt-controller: true

  interrupts:
    maxItems: 4
    description: |
     Specifies the interrupt line(s) in the interrupt-parent controller node;
     valid values depend on the type of parent interrupt controller

required:
  - compatible
  - reg
  - "#interrupt-cells"
  - interrupt-controller
  - interrupts

additionalProperties: false

examples:
  - |
    apic_gic: interrupt-controller@a20000 {
        compatible = "kalray,coolidge-v1-apic-gic";
        reg = <0xa20000 0x12000>;
        #interrupt-cells = <1>;
        interrupt-controller;
        interrupt-parent = <&intc>;
        interrupts = <4>, <5>, <6>, <7>;
    };

...
